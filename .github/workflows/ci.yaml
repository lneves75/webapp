name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:

  git:
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.git.outputs.ref }}
    steps:
      - name: Get ref
        id: git
        run: |
          if [ "${{ github.event_name }}" != 'push' ]; then
            echo "ref=${{ github.event.pull_request.head.sha }}" >> $GITHUB_OUTPUT
          else
            echo "ref=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

  build-image:
    name: Build Image
    needs: git
    uses: lneves75/gh-workflows/.github/workflows/build-image.yaml@test-ci
    with:
      name: 'webapp'
      ref: ${{ needs.git.outputs.ref }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  add-label:
    runs-on: ubuntu-latest
    steps:
      - name: Add built label
        if: contains('pull_request', github.event_name)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr edit $(dirname ${{ github.ref_name }}) --add-label "built"

  # From this point on we determine which environments have Continuous Deployment
  # First we determine the tag suffix we want to use. In this case it's a sequential number based on the
  # github run number and attempt
  prepare-tags:
    if: contains('push', github.event_name)
    needs: build-image
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.environment.outputs.tag }}
    steps:
      - name: Get version
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        id: version
        run: |
          echo "number=$((${{ github.run_number }}+${{ github.run_attempt }}-1))" >> $GITHUB_OUTPUT

  create-tags:
    if: contains('push', github.event_name)
    needs: [git, prepare-tags]
    uses: lneves75/gh-workflows/.github/workflows/create-tag.yaml@test-ci
    with:
      service: 'webapp'
      environment: '["staging"]'
      version: ${{ needs.prepare-tags.outputs.version }}
      ref: ${{ needs.git.outputs.ref }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
