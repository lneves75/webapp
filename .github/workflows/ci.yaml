name: CI

on:
  push:
    branches:
      - master
  pull_request: 

env:
  APP: webapp

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Get image tag
        id: image
        run: |
          if [ "${{ github.event_name }}" != 'push' ]; then
            echo "tag=${{ github.event.pull_request.head.sha }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.image.outputs.tag }}

      - name: Docker login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args:
           COMMIT_HASH=${{ steps.image.outputs.tag }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.APP }}:${{ steps.image.outputs.tag }}

      - name: Add built label
        if: contains('pull_request', github.event_name)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr edit $(dirname ${{ github.ref_name }}) --add-label "built"

      - name: Checkout Argo Apps
        if: github.event_name == 'push'
        uses: actions/checkout@v4
        with:
          repository: lneves75/argocd-apps
          token: ${{ secrets.GITOPS_TOKEN }}

      - name: Set tag for environment
        if: github.event_name == 'push'
        working-directory: apps
        env:
          environment: "staging"
          envIndexExp: ".spec.generators[0].matrix.generators[0].list.elements[] | select(.environment == env(environment)) | key"
          tagExp: ".spec.generators[0].matrix.generators[0].list.elements[env(envIndex)].tag"
        run: |
          export envIndex=$(yq 'eval(env(envIndexExp))' ${{ env.APP }}.yaml)
          echo "Current tag: $(yq 'eval(env(tagExp))' ${{ env.APP }}.yaml)"
          yq 'eval(env(tagExp)) = "${{ steps.image.outputs.tag }}"' -i ${{ env.APP }}.yaml
          git diff ${{ env.APP }}.yaml

      - name: Commit changes to git
        if: github.event_name == 'push'
        env:
          environment: "staging"
        run: |
          if [ $(git status --short | wc -l) -gt 0 ]; then
            commit_message="${{ env.APP }}[${{ steps.image.outputs.tag }}] deployed to ${{ env.environment }}"
            git config user.name lneves75
            git config user.email luis.neves@on.com
            git add apps/${{ env.APP }}.yaml
            git commit -m "${commit_message}" -m"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          else
            echo "No changes to commit" >> $GITHUB_STEP_SUMMARY
          fi
  
      - name: Rebase and push new commits.
        if: github.event_name == 'push'
        uses: nick-fields/retry@v3
        with:
          retry_on: error
          max_attempts: 3
          timeout_seconds: 15
          command: |
            git remote add origin https://github.com/lneves75/argocd-apps.git
            git pull --rebase origin master && \
            git push
